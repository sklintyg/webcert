test {
    exclude '**/*IT*'
}

task camelTest(type: Test) {
    outputs.upToDateWhen { false }
    include '**/*IT*'
}

camelTest.mustRunAfter test

task copyResources(type: Copy) {
    from "${projectDir}/../web/src/main/resources/security"
    include "*.yaml"
    into "${buildDir}/resources/test/security"
}

compileJava.dependsOn copyResources

dependencies {
    compile project(':webcert-common')

    compile "se.riv.clinicalprocess.healthcond.certificate:clinicalprocess-healthcond-certificate-schemas:${rivtaClinicalprocessSchemasVersion}"
    compile "se.inera.intyg.infra:pu-integration:${infraVersion}"

    compile "org.springframework:spring-jms:${springVersion}"
    compile "org.apache.camel:camel-spring:${camelVersion}"
    compile "org.apache.camel:camel-core:${camelVersion}"
    compile "org.apache.camel:camel-cxf:${camelVersion}"
    compile "org.apache.camel:camel-jms:${camelVersion}"
    compile "org.apache.camel:camel-jackson:${camelVersion}"
    compile "org.apache.camel:camel-jaxb:${camelVersion}"
    compile "org.apache.activemq:activemq-camel:${activeMqVersion}"

    testCompile project(':notification-stub')

    testCompile("se.inera.intyg.common:lisjp:${commonVersion}")

    testCompile "org.awaitility:awaitility:${awaitilityVersion}"
    testCompile "org.kubek2k:springockito:${springockitoVersion}"
    testCompile "org.apache.camel:camel-test-spring:${camelVersion}"
    testCompile "org.springframework:spring-test:${springVersion}"
    testCompile "org.apache.activemq:activemq-spring:${activeMqVersion}"
    testCompile "org.springframework.data:spring-data-redis:${springDataRedisVersion}"
}
