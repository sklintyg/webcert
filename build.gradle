plugins {
    id "se.inera.intyg.plugin.common" version "3.1.4" apply false
    id "org.gretty" version "3.0.1" apply false
    id "com.moowork.node" version "1.3.1" apply false
    id "io.spring.dependency-management" version "1.0.9.RELEASE" apply false
}

ext {
    commonVersion = System.properties['commonVersion'] ?: '3.17.2-SNAPSHOT'
    infraVersion = System.properties['infraVersion'] ?: '3.17.2-SNAPSHOT'
    refDataVersion = System.properties['refDataVersion'] ?: '1.0-SNAPSHOT'

    schemasContractVersion = "2.1.8"
    intygHealthcondRehabilitationSchemasVersion = "1.1.3"

    funktionstjansterGrpSchemasVersion = "1.0.6"
    intygClinicalprocessSchemasVersion = "1.0.24"
    ppSchemasVersion = "1.0.5"
    ppTermsSchemasVersion = "1.0.5"
    rivtaClinicalprocessSchemasVersion = "4.0.5"
    rivtaItintegrationMonitoringSchemasVersion = "1.0.0.5"

    autovalueVersion = "1.7"
    camelVersion = "2.25.0"
    commonsIoVersion = "2.6"
    cxfVersion = "3.2.4"
    geronimoJmsVersion = "1.1.1"
    h2Version = "2.1.210"
    hibernateVersion = "5.3.15.Final" // included because of bug in BOM version 5.4.12
    springFrameworkVersion = "5.2.20.RELEASE" // included because of vulnerability (CVE-2022-22965) in 5.2.4.RELEASE
    jadiraUserTypeVersion = "6.0.1.GA"
    swaggerJaxrsVersion = "1.6.0"
    jakartaJwsApiVersion = "2.1.0"
    jexcelVersion = "1.0.9"
    jsonwebtokenVersion = "0.11.1"
    jwksVersion = "0.11.0"
    luceneAnalyzersCommonVersion = "8.5.0"
    openWsVersion = "1.5.1"
    opensamlVersion = "2.6.1"
    apacheJstlVersion = "9.4.27.v20200227"
    stAntlr4Version = "4.3"
    xmlToolingVersion = "1.4.1"
    shedlockSpringVersion = "4.5.0"
    vavrVersion = "0.10.2"
    jaxbXjcVersion = "2.3.0.1"
    jaxbCoreVersion = "2.3.0.1"
    jaxbImplVersion = "2.3.1"
    jaxbRuntimeVersion = "2.3.1"
    javaxActivationVersion = "1.2.0"

    nodeJsVersion = "10.16.2"
    npmVersion = "6.10.3"

    springbootMavenBomVersion = "2.2.5.RELEASE"
}

allprojects {
    apply plugin: 'se.inera.intyg.plugin.common'
    apply plugin: 'maven'
    apply plugin: 'idea'
    apply plugin: "io.spring.dependency-management"

    repositories {
        mavenLocal()
        maven { url "https://nexus.drift.inera.se/repository/it-public/" }
        mavenCentral {
            content {
                // this repository contains everything BUT artifacts with group starting with "se.inera"
                excludeGroupByRegex "se\\.inera.*"
            }
        }
    }

    test {
        useJUnitPlatform()
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springbootMavenBomVersion}"
        }
    }

    dependencies {
        // Exclude and import of non-BOM version of Hibernate due to
        // bug in BOM-version 5.4.12.
        compile("org.hibernate:hibernate-core") {
            version {
                strictly "${hibernateVersion}"
            }
        }
        compile("org.hibernate:hibernate-hikaricp") {
            version {
                strictly "${hibernateVersion}"
            }
        }
        compile("org.hibernate:hibernate-entitymanager") {
            version {
                strictly "${hibernateVersion}"
            }
        }
        // Exclude and import of non-BOM version of Spring Framework due to
        // vulnerability (CVE-2022-22965) in BOM-version 5.2.4.RELEASE.
        compile("org.springframework:spring-web") {
            version {
                strictly "${springFrameworkVersion}"
            }
        }
        compile("org.springframework:spring-webmvc") {
            version {
                strictly "${springFrameworkVersion}"
            }
        }
        compile("org.springframework:spring-aop") {
            version {
                strictly "${springFrameworkVersion}"
            }
        }
        compile("org.springframework:spring-beans") {
            version {
                strictly "${springFrameworkVersion}"
            }
        }
        compile("org.springframework:spring-context") {
            version {
                strictly "${springFrameworkVersion}"
            }
        }
        compile("org.springframework:spring-core") {
            version {
                strictly "${springFrameworkVersion}"
            }
        }
        compile("org.springframework:spring-expression") {
            version {
                strictly "${springFrameworkVersion}"
            }
        }

        compile "javax.annotation:javax.annotation-api"
        compile "jakarta.xml.bind:jakarta.xml.bind-api"
        compile "jakarta.xml.ws:jakarta.xml.ws-api"
        compile "jakarta.jws:jakarta.jws-api:${jakartaJwsApiVersion}"
        compile "com.sun.xml.messaging.saaj:saaj-impl"
        testCompile "org.glassfish.jaxb:jaxb-runtime"

        testCompile "se.inera.intyg.refdata:refdata:${refDataVersion}"

        testCompile "junit:junit:4.13"
        testCompile "org.junit.jupiter:junit-jupiter-api"
        testCompile "org.junit.jupiter:junit-jupiter-params"
        testCompile "org.mockito:mockito-junit-jupiter"
        testCompile "org.mockito:mockito-core"

        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
        testRuntimeOnly "org.junit.vintage:junit-vintage-engine"
    }

    group = 'se.inera.intyg.webcert'
    version = System.properties['buildVersion'] ?: '0-SNAPSHOT'

    compileJava.options.encoding = 'UTF-8'

    sourceCompatibility = 11
    targetCompatibility = 11

    task createVersionPropertyFile(type: VersionPropertyFileTask)

    uploadArchives.enabled = false

    uploadArchives.repositories.mavenDeployer {
        repository(url: "https://nexus.drift.inera.se/repository/maven-releases/") {
            authentication(userName: System.properties['ineraNexusUsername'], password: System.properties['ineraNexusPassword'])
        }
    }

    [install.repositories.mavenInstaller, uploadArchives.repositories.mavenDeployer]*.pom*.whenConfigured { pom ->
        pom.dependencies.findAll { dep -> dep.groupId == 'se.inera.intyg.common' }.each {
            it.version = se.inera.intyg.IntygPluginKt.findResolvedVersion(project, 'se.inera.intyg.common')
        }
        pom.dependencies.findAll { dep -> dep.groupId == 'se.inera.intyg.infra' }.each {
            it.version = se.inera.intyg.IntygPluginKt.findResolvedVersion(project, 'se.inera.intyg.infra')
        }
    }
}

task tagRelease(type: TagReleaseTask)
