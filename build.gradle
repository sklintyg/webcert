plugins {
    id "se.inera.intyg.plugin.common" version "3.2.9" apply false
    id "org.gretty" version "3.0.9" apply false
    id "nebula.node" version "1.4.2" apply false
    id "io.spring.dependency-management" version "1.0.15.RELEASE" apply false
}

ext {
    commonVersion = System.properties['commonVersion'] ?: '3.20.0-SNAPSHOT'
    infraVersion = System.properties['infraVersion'] ?: '3.20.0-SNAPSHOT'
    refDataVersion = System.properties['refDataVersion'] ?: '1.0-SNAPSHOT'

    funktionstjansterGrpSchemasVersion = "1.0.6.1"
    intygClinicalprocessSchemasVersion = "1.0.24.1"
    intygHealthcondRehabilitationSchemasVersion = "1.1.3.1"
    ppSchemasVersion = "1.0.5.1"
    ppTermsSchemasVersion = "1.0.5.1"
    rivtaClinicalprocessSchemasVersion = "4.0.5.2"
    rivtaItintegrationMonitoringSchemasVersion = "1.0.0.5.1"
    schemasContractVersion = "2.1.8.1"

    autovalueVersion = "1.10.4"
    camelVersion = "3.21.1"
    commonsIoVersion = "2.14.0"
    cxfVersion = "3.6.2"
    geronimoJmsVersion = "1.1.1"
    jadiraUserTypeVersion = "6.0.1.GA"
    jakartaJwsApiVersion = "3.0.0"
    javaxJwsApiVersion = "1.1"
    jaxb2Version = "0.13.1"
    jexcelVersion = "1.0.9"
    jsonwebtokenVersion = "0.11.5"
    jwksVersion = "0.22.0"
    luceneAnalyzersCommonVersion = "9.8.0"
    openWsVersion = "1.5.4"
    opensamlVersion = "2.6.4"
    picocliVersion = "4.7.5"
    shedlockSpringVersion = "4.46.0"
    stAntlr4Version = "4.3.4"
    swaggerJaxrsVersion = "1.6.11"
    vavrVersion = "0.10.4"
    xmlToolingVersion = "1.4.4"

    nodeJsVersion = "12.22.12"
    npmVersion = "6.14.16"

    springbootMavenBomVersion = "2.7.17"
}

allprojects {
    apply plugin: 'se.inera.intyg.plugin.common'
    apply plugin: 'maven'
    apply plugin: 'idea'
    apply plugin: "io.spring.dependency-management"

    idea {
        module {
            downloadJavadoc = true
        }
    }

    repositories {
        mavenLocal()
        maven { url "https://nexus.drift.inera.se/repository/it-public/" }
        mavenCentral {
            content {
                // this repository contains everything BUT artifacts with group starting with "se.inera"
                excludeGroupByRegex "se\\.inera.*"
            }
        }
    }

    test {
        useJUnitPlatform()
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springbootMavenBomVersion}"
        }
    }

    /*configurations {
        compileClasspath {
            resolutionStrategy.force 'com.google.guava:guava:[21.0, 32.0.1-jre['
        }
    }*/

    // Below sourceSets instruction was necessitated by google guava dependency version 32.1.3-jre.
    // https://github.com/google/guava/issues/6612
    // This can most likely be removed with Gradle 7.+
    /*sourceSets.configureEach {
        configurations.named(runtimeClasspathConfigurationName) {
            attributes.attribute(Attribute.of("org.gradle.jvm.environment", String), "standard-jvm")
        }
        configurations.named(compileClasspathConfigurationName) {
            attributes.attribute(Attribute.of("org.gradle.jvm.environment", String), "standard-jvm")
        }
    }*/

    dependencies {
        //implementation("com.google.guava:guava") { version { require "[21.0, 32.0.1-jre["  } }

        implementation "javax.jws:javax.jws-api:${javaxJwsApiVersion}"

        compile "javax.annotation:javax.annotation-api"
        compile "jakarta.xml.bind:jakarta.xml.bind-api"
        compile "jakarta.xml.ws:jakarta.xml.ws-api"
        compile "jakarta.jws:jakarta.jws-api:${jakartaJwsApiVersion}"
        compile "com.sun.xml.messaging.saaj:saaj-impl"
        testCompile "org.glassfish.jaxb:jaxb-runtime"

        testCompile "se.inera.intyg.refdata:refdata:${refDataVersion}"

        testCompile "junit:junit"
        testCompile "org.junit.jupiter:junit-jupiter-api"
        testCompile "org.junit.jupiter:junit-jupiter-params"
        testCompile "org.mockito:mockito-junit-jupiter"
        testCompile "org.mockito:mockito-core"

        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
        testRuntimeOnly "org.junit.vintage:junit-vintage-engine"
    }

    group = 'se.inera.intyg.webcert'
    version = System.properties['buildVersion'] ?: '0-SNAPSHOT'

    compileJava.options.encoding = 'UTF-8'

    sourceCompatibility = 11
    targetCompatibility = 11

    task createVersionPropertyFile(type: VersionPropertyFileTask)

    uploadArchives.enabled = false

    uploadArchives.repositories.mavenDeployer {
        repository(url: "https://nexus.drift.inera.se/repository/maven-releases/") {
            authentication(userName: System.properties['ineraNexusUsername'], password: System.properties['ineraNexusPassword'])
        }
    }

    [install.repositories.mavenInstaller, uploadArchives.repositories.mavenDeployer]*.pom*.whenConfigured { pom ->
        pom.dependencies.findAll { dep -> dep.groupId == 'se.inera.intyg.common' }.each {
            it.version = se.inera.intyg.IntygPluginKt.findResolvedVersion(project, 'se.inera.intyg.common')
        }
        pom.dependencies.findAll { dep -> dep.groupId == 'se.inera.intyg.infra' }.each {
            it.version = se.inera.intyg.IntygPluginKt.findResolvedVersion(project, 'se.inera.intyg.infra')
        }
    }
}

task tagRelease(type: TagReleaseTask)
