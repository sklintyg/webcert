apply plugin: 'org.gretty'
apply plugin: 'idea'
apply plugin: 'war'

def buildDirectory = project.layout.buildDirectory.get().asFile

ext {
    generatedJavaDir = file("${buildDirectory}/generatedSource/java")
    xsdBindings = file("src/main/resources/schemas/dss/bindings.xjb")
    xsdDir = file("src/main/resources/schemas/dss")
}

gretty {
    def instance = System.properties['instance'] ?: '0'
    def useHttpPort = 8020 + (instance as Integer)
    def useInternalHttpPort = 8120 + (instance as Integer)
    def applicationDir = "${rootProject.projectDir}/devops/dev"

    servletContainer = 'tomcat10'
    contextPath = '/'
    integrationTestTask = null
    scanInterval = 0
    debugPort = 8820 + (instance as Integer)
    fastReload = true
    inplaceMode = 'hard'
    debugSuspend = false
    serverConfigFile = "tomcat-gretty.xml"

    jvmArgs = ["-Dcatalina.base=${buildDirectory}/catalina.base",
               "-Dspring.profiles.active=dev,caching-enabled,wc-security-test,ia-stub,certificate-service-active,servicenow-integration,pu-integration-intyg-proxy-service",
               "-Dlogback.file=${applicationDir}/config/logback-spring.xml",
               "-Djava.awt.headless=true",
               "-Dfile.encoding=UTF-8",
               "-Dapplication.dir=${applicationDir}",
               "-Ddev.config.file=${applicationDir}/config/application-dev.properties",
               "-Ddev.http.port=${useHttpPort}",
               "-Ddev.http.port.internal=${useInternalHttpPort}",
               "-Dxml.catalog.cacheEnabled=false"
    ]
}

idea {
    module {
        generatedSourceDirs.add(generatedJavaDir)
    }
}

configurations {
    // This is required to make the Schematron implementation pick up Saxon instead of Xalan.
    runtime { exclude group: 'xalan', module: 'xalan' }

    xsdgen

    testImplemetationClasspath.extendsFrom implementation
}

test { exclude '**/*IT*' }

tasks.register('xsd2Java') {
    doLast {
        mkdir generatedJavaDir.path
        ant.taskdef(
                name: 'xjc',
                classname: 'com.sun.tools.xjc.XJCTask',
                classpath: configurations.xsdgen.asPath
        )
        ant.xjc(
                destdir: generatedJavaDir.path,
                binding: xsdBindings,
                fork: true) {
            schema(dir: xsdDir.path, includes: "**/*.xsd")
            produces(dir: generatedJavaDir.path, includes: "**/*")
            jvmarg(value: '-Djavax.xml.accessExternalDTD=file')
        }
    }
}

compileJava.dependsOn(xsd2Java)
sourceSets.main.java { srcDir generatedJavaDir }

dependencies {
    implementation project(':fk-stub')
    implementation project(':fmb-integration')
    implementation project(':integration-api')
    implementation project(':intygstjanst-stub')
    implementation project(':kundportalen-integration')
    implementation project(':mail-stub')
    implementation project(':notification-sender')
    implementation project(':notification-stub')
    implementation project(':pp-integration')
    implementation project(':servicenow-integration')
    implementation project(':tak-integration')
    implementation project(':webcert-common')
    implementation project(':webcert-persistence')
    implementation project(':webcert-logging')

    implementation "com.fasterxml.jackson.core:jackson-core"
    implementation "com.fasterxml.jackson.core:jackson-annotations"
    implementation "com.fasterxml.jackson.core:jackson-databind"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    implementation "se.inera.intyg.infra:certificate:${infraVersion}"
    implementation "se.inera.intyg.infra:common-redis-cache-core:${infraVersion}"
    implementation "se.inera.intyg.infra:driftbanner-dto:${infraVersion}"
    implementation "se.inera.intyg.infra:dynamiclink:${infraVersion}"
    implementation "se.inera.intyg.infra:grp-stub:${infraVersion}"
    implementation "se.inera.intyg.infra:hsa-integration-api:${infraVersion}"
    implementation "se.inera.intyg.infra:hsa-integration-intyg-proxy-service:${infraVersion}"
    implementation "se.inera.intyg.infra:ia-integration:${infraVersion}"
    implementation "se.inera.intyg.infra:integreradeenheter:${infraVersion}"
    implementation "se.inera.intyg.infra:intyginfo:${infraVersion}"
    implementation "se.inera.intyg.infra:log-messages:${infraVersion}"
    implementation "se.inera.intyg.infra:loggtjanst-stub:${infraVersion}"
    implementation "se.inera.intyg.infra:message:${infraVersion}"
    implementation "se.inera.intyg.infra:monitoring:${infraVersion}"
    implementation "se.inera.intyg.infra:postnummerservice-integration:${infraVersion}"
    implementation "se.inera.intyg.infra:privatepractitioner:${infraVersion}"
    implementation "se.inera.intyg.infra:pu-integration-api:${infraVersion}"
    implementation "se.inera.intyg.infra:pu-integration:${infraVersion}"
    implementation "se.inera.intyg.infra:security-authorities:${infraVersion}"
    implementation "se.inera.intyg.infra:security-common:${infraVersion}"
    implementation "se.inera.intyg.infra:security-filter:${infraVersion}"
    implementation "se.inera.intyg.infra:security-siths:${infraVersion}"
    implementation "se.inera.intyg.infra:sjukfall-engine:${infraVersion}"
    implementation "se.inera.intyg.infra:srs-integration:${infraVersion}"
    implementation "se.inera.intyg.infra:testcertificate:${infraVersion}"
    implementation "se.inera.intyg.infra:xmldsig:${infraVersion}"

    implementation "se.inera.intyg.common:af00213:${commonVersion}"
    implementation "se.inera.intyg.common:af00251:${commonVersion}"
    implementation "se.inera.intyg.common:ag114:${commonVersion}"
    implementation "se.inera.intyg.common:ag7804:${commonVersion}"
    implementation "se.inera.intyg.common:common-schemas:${commonVersion}"
    implementation "se.inera.intyg.common:common-services:${commonVersion}"
    implementation "se.inera.intyg.common:common-support:${commonVersion}"
    implementation "se.inera.intyg.common:db:${commonVersion}"
    implementation "se.inera.intyg.common:doi:${commonVersion}"
    implementation "se.inera.intyg.common:fk-parent:${commonVersion}"
    implementation "se.inera.intyg.common:fk7263:${commonVersion}"
    implementation "se.inera.intyg.common:integration-util:${commonVersion}"
    implementation "se.inera.intyg.common:lisjp:${commonVersion}"
    implementation "se.inera.intyg.common:logging-util:${commonVersion}"
    implementation "se.inera.intyg.common:luae_fs:${commonVersion}"
    implementation "se.inera.intyg.common:luae_na:${commonVersion}"
    implementation "se.inera.intyg.common:luse:${commonVersion}"
    implementation "se.inera.intyg.common:ts-bas:${commonVersion}"
    implementation "se.inera.intyg.common:ts-diabetes:${commonVersion}"
    implementation "se.inera.intyg.common:tstrk1009:${commonVersion}"
    implementation "se.inera.intyg.common:tstrk1062:${commonVersion}"

    implementation "se.funktionstjanster.grp:funktionstjanster-grp-schemas:${funktionstjansterGrpSchemasVersion}"
    implementation "se.inera.intyg.clinicalprocess.healthcond.certificate:intyg-clinicalprocess-healthcond-certificate-schemas:${intygClinicalprocessSchemasVersion}"
    implementation "se.inera.intyg.clinicalprocess.healthcond.rehabilitation:intyg-clinicalprocess-healthcond-rehabilitation-schemas:${intygHealthcondRehabilitationSchemasVersion}"
    implementation "se.inera.intyg.clinicalprocess.healthcond.srs:intyg-clinicalprocess-healthcond-srs-schemas:${srsSchemasVersion}"
    implementation "se.inera.intyg.infrastructure.directory.privatepractitioner:intyg-infrastructure-directory-privatepractitioner-schemas:${ppSchemasVersion}"
    implementation "se.inera.intyg.infrastructure.directory.privatepractitioner.terms:intyg-infrastructure-directory-privatepractitioner-terms-schemas:${ppTermsSchemasVersion}"
    implementation "se.inera.intyg.schemas:schemas-contract:${schemasContractVersion}"
    implementation "se.riv.clinicalprocess.healthcond.certificate:clinicalprocess-healthcond-certificate-schemas:${rivtaClinicalprocessSchemasVersion}"
    implementation "se.riv.insuranceprocess.healthreporting:insuranceprocess-healthreporting-schemas:${rivtaInsuranceprocessSchemasVersion}"
    implementation "se.riv.itintegration.monitoring:itintegration-monitoring-schemas:${rivtaItintegrationMonitoringSchemasVersion}"
    implementation "se.riv.strategicresourcemanagement.persons.person:strategicresourcemanagement-persons-person-schemas:${rivtaGetPersonsPersonSchemasVersion}"

    implementation "co.elastic.logging:logback-ecs-encoder:${logbackEcsEncoderVersion}"
    implementation "codes.rafael.jaxb2_commons:jaxb2-basics:${jaxb2Version}"
    implementation "com.google.guava:guava:${guavaVersion}"
    implementation "commons-io:commons-io:${commonsIoVersion}"
    implementation "io.prometheus:simpleclient_hotspot"
    implementation "io.prometheus:simpleclient_servlet_jakarta"
    implementation("io.swagger:swagger-jaxrs:${swaggerJaxrsVersion}") { exclude(module: "jsr311-api") }
    implementation "io.vavr:vavr:${vavrVersion}"
    implementation "jakarta.mail:jakarta.mail-api"
    implementation "jakarta.persistence:jakarta.persistence-api"
    implementation "joda-time:joda-time:${jodaTimeVersion}"
    implementation "net.javacrumbs.shedlock:shedlock-spring:${shedlockSpringVersion}"
    implementation "net.javacrumbs.shedlock:shedlock-provider-redis-spring:${shedlockSpringVersion}"
    implementation "org.apache.activemq:activemq-spring"
    implementation "org.apache.cxf:cxf-rt-frontend-jaxrs:${cxfVersion}"
    implementation "org.apache.httpcomponents.client5:httpclient5"
    implementation "org.apache.lucene:lucene-analysis-common:${luceneAnalyzersCommonVersion}"
    implementation "org.hibernate.orm:hibernate-core"
    implementation "org.jxls:jxls-jexcel:${jexcelVersion}"
    implementation "org.springframework.data:spring-data-jpa"
    implementation 'org.springframework.security:spring-security-config'
    implementation 'org.springframework.security:spring-security-saml2-service-provider'
    implementation "org.springframework.session:spring-session-data-redis"
    implementation "org.springframework:spring-jms"
    implementation "org.springframework:spring-webmvc"
    implementation "org.springframework.ws:spring-xml"

    implementation "se.inera.intyg.refdata:refdata-featureK1J-357:${refDataVersion}"

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly "se.inera.intyg.infra:pu-integration-intyg-proxy-service:${infraVersion}"
    runtimeOnly "org.springframework:spring-webmvc"
    runtimeOnly "xerces:xercesImpl:${xercesVersion}"

    testAnnotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'

    testImplementation "com.helger.schematron:ph-schematron-xslt:${phSchematronVersion}"
    testImplementation "org.assertj:assertj-core"
    testImplementation "org.springframework.boot:spring-boot-test"
    testImplementation "org.springframework:spring-test"
    testImplementation "org.xmlunit:xmlunit-legacy"
    testImplementation "se.inera.intyg.common:sos_parent:${commonVersion}"
    testImplementation "se.inera.intyg.common:ts-parent:${commonVersion}"
    testImplementation "se.inera.intyg.common:ag-parent:${commonVersion}"

    xsdgen "org.glassfish.jaxb:jaxb-xjc"
    xsdgen "com.sun.xml.bind:jaxb-impl"
}